{
    "collab_server" : "",
    "contents" : "#install.packages(\"formatR\")\n#formatR::tidy_dir(\"R\")\n\n#install.packages(\"lintr\")\n#lintr::lint_package()\n#------------------1\n# find a suitable and permitted <pkg_name> for your package.\n#check on CRAN if the name is already taken.\n#name : pssi     pefeckt solved statistic issue\n\n#----------2\n#create the structure for the package via devtools:: create('../folder/pkg_name')\n#devtools::create(\"~/hello-world/U2/psy\")\n#-----------3\n#put your function checkHeight() from the previous sessions in the created /R folder.\nlibrary(dplyr)\n\n\nage = c(19, 22, 21, 23, 22, 20, 28, 25)\nweight = c(50, 75, 80, 56, 75, 58, 65, 82)\nheight = c(1.66, 1.78, 1.90, 1.72, 1.83, 1.68, 1.70, 1.85)\nsex = c(\"F\", \"M\", \"M\", \"F\", \"M\", \"F\", \"F\", \"M\")\n\nstudents = data.frame(cbind(age, weight, height, sex))\nstudents = transform(students, age = as.numeric(as.character(age)))\nstudents = transform(students, height = as.numeric(as.character(height)))\nstudents = transform(students, weight = as.numeric(as.character(weight)))\n\nstudents$name = c(\"Maria\", \"Franz\", \"Peter\", \"Lisa\", \"Hans\", \"Eva\", \"Mia\", \"Karl\")\n\nstudents\n\n\n#help(package = pssi)\n# ?pssi_data\n# ?checkHeight\n# save(students,file = \"data/passi_data.rda\")\n\ncheckHeight3 = function(students.input = students){\n  # prepare result data.frame\n  result.frame = data.frame(matrix(NA, nrow = nrow(students.input), ncol = 2))\n  colnames(result.frame) = c(\"name\", \"difference\")\n  result.frame$name <- students.input$name\n\n  # calculate sex means for height\n  male.mean = students.input %>%\n    filter(sex == \"M\") %>%\n    summarise(mean = mean(height))\n  female.mean = students.input %>%\n    filter(sex == \"F\") %>%\n    summarise(mean = mean(height))\n\n  # calculate the difference and store it the result data.frame\n  result.frame$difference <- apply(students.input, 1, function(stud) {\n    ifelse(stud[\"sex\"] == \"M\",\n           male.mean - as.numeric(stud[\"height\"]),\n           female.mean - as.numeric(stud[\"height\"])\n    )})\n\n  return(result.frame)\n}\ncheckHeight3(students.input = students)\n\n#mean <- pssi::mean()\n#-----------------4\n# implement the option to calcaulte the difference from the sex-specific or\n# the overall mean height\n# the funciton should have a signature like this:\n# checkHeight = function(students.input,sex.specific=TRUE)\n\n\n#' @title  calcaulte the difference from the sex-specific or the overall mean height\n#'\n#' @description calculate\n#' @param students.input the student dataframe\n#' @param sex.secific the student sex\n#' @export\n#' @include utils.R\n#' @seealso \\code{\\link[utils]{head}}\n#' @return result.frame\n#' @examples\n#'checkHeight(students.input = students,sex.specific=FALSE)\n#'checkHeight(students.input = students,sex.specific=TRUE)\n\n\n\ncheckHeight = function(students.input,sex.specific){\n  # prepare result data.frame\n  result.frame = data.frame(matrix(NA, nrow = nrow(students.input), ncol = 2))\n  colnames(result.frame) = c(\"name\", \"difference\")\n  result.frame$name <- students.input$name\n\n  # calculate sex means for height\n  male.mean = students.input %>%\n    filter(sex == \"M\") %>%\n    summarise(mean = mean(height))\n  female.mean = students.input %>%\n    filter(sex == \"F\") %>%\n    summarise(mean = mean(height))\n  overall.mean = mean(students.input$height)\n\n  # calculate the difference and store it the result data.frame\n  result.frame$difference <- apply(students.input, 1, function(stud){\n    if (sex.specific){\n      ifelse(stud[\"sex\"] == \"M\",\n             male.mean - as.numeric(stud[\"height\"]),\n             female.mean - as.numeric(stud[\"height\"])\n      )\n    } else {\n      overall.mean - as.numeric(stud[\"height\"])\n    }\n  })\n\n  return(result.frame)\n}\ncheckHeight(students.input = students,sex.specific=FALSE)\n\n\n#------------5\n#add a welcome text like Welcome to my first R-package and thanks for using it.muchacho!\n#after your package is loaded\n# Hint : use .onAttach()\n# and packageStartupMessage()\n\n.onAttach <- function(libname,pkgname){\n  packageStartupMessage(\"Welcome to my first R-package and thanks for using it, muchacho!\")\n}\n\n#-----------6\n#Add meaningful Descriptions to the corresponding file that devtools already created for you.\n#Rememner,that we use the package dplyr to calculate the sex-specific means  within the function.\n#Thus,include dplyr as required Imports:.\n\n#-----------7\n#Document your function using the roxygen2 package.\n#1) Manually add roxygen2 style comments on your function in the folder R\n#2) use the command load_all() from devtools to source the functions from your package\n#devtools::load_all()\n#3) use devtools:document() to automatically update the man/ and the NAMESPACE file.\n#here it is important that your working direcotry is set to your package'path\n#devtools::document()\n#4) preview the documentation with ? checkHeight().\n#your should receive the well-known R-style documentation for your funtion\n#?checkHeight()\n#5)repeat that process until you like what you see\n#6) imagine your would have to write this -Rd files by yourself. Roxygen2 is lit af!\n\n#--------------8\n#for any reason ,we want our own mean() function to be used with checkHeight().\n#This functin should round the returned value on three decimals and should just be used\n#internally and thus not exported.\n#create a new script utils.R in which you store this little,self-written helper function.\n#Document it for yourself in roxygen2-style.\n\n#-------------9\n#check,if your self-written mean() function is used by checkHeight().\n#Hint: you check the enviroment of a function via environment(function)\n#envoriment(mean)\n#-------10\n#make sure,that only checkHeight() is getting exported\n#-------------11\n#updata the NAMESPACE file again via devtools::document()\n\n#--------------12\n#add the students.csv to your package as example data.\n#therefore export the dataframe from the lst exercise as a.rda objec\n# and store it in a sub-folder data.\n#also ,include a description as a script in R/ with roxygen2 comments\n#updata evetything via devtools:document()\n\nwrite.csv(students,file = \"data-raw/students.csv\",row.names = FALSE)\nstu <- read.csv(file = \"data-raw/students.csv\")\nstu\n#system.file(\"students\", \"students.csv\", package = \"pssi\")\ndevtools::use_data(stu,overwrite = TRUE)\n\n#-------------13\n# run a check on your whole package via devtool's check() function\n#hint: make sure,you are in the package's working directory\n#try to understand the output and correct your code accordingly\n#hint : do not get confused by notes concerning the variable names\n#like no visible binding for global variable 'sex'\n#this is due to the use of dplyr and cannot be mitigated\n\n#devtools::check()\n\n\n#14. put your package on Github and add an informative README.md\n\n#15.Install your package via devtools:: install_github(\"<Username>/<Package name>\")\n# and test its functionality on the provided students data set\n# also check the help description\n\n#devtools::release()\n",
    "created" : 1509964131285.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2660144534",
    "id" : "AB3881F1",
    "lastKnownWriteTime" : 1509992523,
    "last_content_update" : 1509992523206,
    "path" : "~/hello-world/U2/pssi/R/Exercise1.R",
    "project_path" : "R/Exercise1.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}