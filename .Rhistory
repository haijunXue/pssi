#create the structure for the package via devtools:: create('../folder/pkg_name')
#devtools::create("~/hello-world/U2/psy")
#-----------3
#put your function checkHeight() from the previous sessions in the created /R folder.
library(dplyr)
age = c(19, 22, 21, 23, 22, 20, 28, 25)
weight = c(50, 75, 80, 56, 75, 58, 65, 82)
height = c(1.66, 1.78, 1.90, 1.72, 1.83, 1.68, 1.70, 1.85)
sex = c("F", "M", "M", "F", "M", "F", "F", "M")
students = data.frame(cbind(age, weight, height, sex))
students = transform(students, age = as.numeric(as.character(age)))
students = transform(students, height = as.numeric(as.character(height)))
students = transform(students, weight = as.numeric(as.character(weight)))
students$name = c("Maria", "Franz", "Peter", "Lisa", "Hans", "Eva", "Mia", "Karl")
checkHeight3 = function(students.input = students){
# prepare result data.frame
result.frame = data.frame(matrix(NA, nrow = nrow(students.input), ncol = 2))
colnames(result.frame) = c("name", "difference")
result.frame$name <- students.input$name
# calculate sex means for height
male.mean = students.input %>%
filter(sex == "M") %>%
summarise(mean = mean(height))
female.mean = students.input %>%
filter(sex == "F") %>%
summarise(mean = mean(height))
# calculate the difference and store it the result data.frame
result.frame$difference <- apply(students.input, 1, function(stud) {
ifelse(stud["sex"] == "M",
male.mean - as.numeric(stud["height"]),
female.mean - as.numeric(stud["height"])
)})
return(result.frame)
}
checkHeight3(students.input = students)
#-----------------4
# implement the option to calcaulte the difference from the sex-specific or
# the overall mean height
# the funciton should have a signature like this:
# checkHeight = function(students.input,sex.specific=TRUE)
checkHeight = function(students.input,sex.specific = TRUE){
result.frame = data.frame(matrix(NA,nrow = nrow(students.input),ncol = 2))
colnames(result.frame) = c("name","difference")
result.frame$name = students.input$name
#calculate sex means for height
#the overall mean height
male.mean = students.input %>%
filter(sex == "M") %>%
summarise(mean=mean(height))
female.mean = students.input %>%
filter(sex == "F") %>%
summarise(mean = mean(height))
overall.mean = mean(students.input$height)
#calculate the difference and store it in the result data.frame
result.frame$difference <- apply(students.input,1,function(stud){
if(sex.specific = TRUE){
ifelse(
stud['sex'] == "M",
male.mean - as.numeric(stud["height"]),
female.mean - as.numeric(stud["height"])
)
} else {
overall.mean - as.numeric(stud["height"])
}
})
return(result.frame)
}
checkHeight(students.input,sex.specific = TRUE)
checkHeight = function(students.input,sex.specific = TRUE){
result.frame = data.frame(matrix(NA,nrow = nrow(students.input),ncol = 2))
colnames(result.frame) = c("name","difference")
result.frame$name = students.input$name
#calculate sex means for height
#the overall mean height
male.mean = students.input %>%
filter(sex == "M") %>%
summarise(mean=mean(height))
female.mean = students.input %>%
filter(sex == "F") %>%
summarise(mean = mean(height))
overall.mean = mean(students.input$height)
#calculate the difference and store it in the result data.frame
result.frame$difference <- apply(students.input,1,function(stud){
if(sex.specific = TRUE){
ifelse(
stud['sex'] == "M",
male.mean - as.numeric(stud["height"]),
female.mean - as.numeric(stud["height"])
)
} else {
overall.mean - as.numeric(stud["height"])
}
})
return(result.frame)
}
checkHeight(students.input,TRUE)
checkHeight3 = function(students.input = students){
# prepare result data.frame
result.frame = data.frame(matrix(NA, nrow = nrow(students.input), ncol = 2))
colnames(result.frame) = c("name", "difference")
result.frame$name <- students.input$name
# calculate sex means for height
male.mean = students.input %>%
filter(sex == "M") %>%
summarise(mean = mean(height))
female.mean = students.input %>%
filter(sex == "F") %>%
summarise(mean = mean(height))
# calculate the difference and store it the result data.frame
result.frame$difference <- apply(students.input, 1, function(stud) {
ifelse(stud["sex"] == "M",
male.mean - as.numeric(stud["height"]),
female.mean - as.numeric(stud["height"])
)})
return(result.frame)
}
checkHeight3(students.input = students)
#-----------------4
# implement the option to calcaulte the difference from the sex-specific or
# the overall mean height
# the funciton should have a signature like this:
# checkHeight = function(students.input,sex.specific=TRUE)
checkHeight = function(students.input,sex.specific = TRUE){
result.frame = data.frame(matrix(NA,nrow = nrow(students.input),ncol = 2))
colnames(result.frame) = c("name","difference")
result.frame$name = students.input$name
#calculate sex means for height
#the overall mean height
male.mean = students.input %>%
filter(sex == "M") %>%
summarise(mean=mean(height))
female.mean = students.input %>%
filter(sex == "F") %>%
summarise(mean = mean(height))
overall.mean = mean(students.input$height)
#calculate the difference and store it in the result data.frame
result.frame$difference <- apply(students.input,1,function(stud){
if(sex.specific = TRUE){
ifelse(
stud['sex'] == "M",
male.mean - as.numeric(stud["height"]),
female.mean - as.numeric(stud["height"])
)
} else {
overall.mean - as.numeric(stud["height"])
}
})
return(result.frame)
}
checkHeight(students.input=students,sex.specific = TRUE)
#-----------------4
# implement the option to calcaulte the difference from the sex-specific or
# the overall mean height
# the funciton should have a signature like this:
# checkHeight = function(students.input,sex.specific=TRUE)
checkHeight = function(students.input,sex.specific = TRUE){
result.frame = data.frame(matrix(NA,nrow = nrow(students.input),ncol = 2))
colnames(result.frame) = c("name","difference")
result.frame$name = students.input$name
#calculate sex means for height
#the overall mean height
male.mean = students.input %>%
filter(sex == "M") %>%
summarise(mean=mean(height))
female.mean = students.input %>%
filter(sex == "F") %>%
summarise(mean = mean(height))
overall.mean = mean(students.input$height)
#calculate the difference and store it in the result data.frame
result.frame$difference <- apply(students.input,1,function(stud){
if(sex.specific = TRUE){
ifelse(
stud['sex'] == "M",
male.mean - as.numeric(stud["height"]),
female.mean - as.numeric(stud["height"])
)
} else {
overall.mean - as.numeric(stud["height"])
}
})
return(result.frame)
}
checkHeight(students.input=students,sex.specific = students$sex)
print(mean(students.input$height))
print(mean(students$height))
checkHeight = function(students.input = students,sex.specific=TRUE){
# prepare result data.frame
result.frame = data.frame(matrix(NA, nrow = nrow(students.input), ncol = 2))
colnames(result.frame) = c("name", "difference")
result.frame$name <- students.input$name
# calculate sex means for height
male.mean = students.input %>%
filter(sex == "M") %>%
summarise(mean = mean(height))
female.mean = students.input %>%
filter(sex == "F") %>%
summarise(mean = mean(height))
overall.mean = mean(students.input$height)
# calculate the difference and store it the result data.frame
result.frame$difference <- apply(students.input, 1, function(stud) {
if(sex.specific = TRUE){
ifelse(stud["sex"] == "M",
male.mean - as.numeric(stud["height"]),
female.mean - as.numeric(stud["height"])
)
}else {
overall.mean - as.numeric(stud["height"])
}})
return(result.frame)
}
checkHeight(students.input = students,sex.specific = TRUE)
checkHeight = function(students.input = students,sex.specific=TRUE){
# prepare result data.frame
result.frame = data.frame(matrix(NA, nrow = nrow(students.input), ncol = 2))
colnames(result.frame) = c("name", "difference")
result.frame$name <- students.input$name
# calculate sex means for height
male.mean = students.input %>%
filter(sex == "M") %>%
summarise(mean = mean(height))
female.mean = students.input %>%
filter(sex == "F") %>%
summarise(mean = mean(height))
overall.mean = mean(students.input$height)
# calculate the difference and store it the result data.frame
result.frame$difference <- apply(students.input, 1, function(stud) {
if(sex.specific = TRUE){
ifelse(stud["sex"] == "M",
male.mean - as.numeric(stud["height"]),
female.mean - as.numeric(stud["height"])
)
}else {
overall.mean - as.numeric(stud["height"])
}})
return(result.frame)
}
checkHeight(students.input = students,sex.specific = TRUE)
checkHeight = function(students.input = students,sex.specific=TRUE){
# prepare result data.frame
result.frame = data.frame(matrix(NA, nrow = nrow(students.input), ncol = 2))
colnames(result.frame) = c("name", "difference")
result.frame$name <- students.input$name
# calculate sex means for height
male.mean = students.input %>%
filter(sex == "M") %>%
summarise(mean = mean(height))
female.mean = students.input %>%
filter(sex == "F") %>%
summarise(mean = mean(height))
overall.mean = mean(students.input$height)
# calculate the difference and store it the result data.frame
result.frame$difference <- apply(students.input, 1, function(stud) {
if(sex.specific = TRUE){
ifelse(stud["sex"] == "M",
male.mean - as.numeric(stud["height"]),
female.mean - as.numeric(stud["height"])
)
}else {
overall.mean - as.numeric(stud["height"])
}})
return(result.frame)
}
checkHeight(students.input = students,sex.specific = TRUE)
checkHeight = function(students.input = students,sex.specific=TRUE){
# prepare result data.frame
result.frame = data.frame(matrix(NA, nrow = nrow(students.input), ncol = 2))
colnames(result.frame) = c("name", "difference")
result.frame$name <- students.input$name
# calculate sex means for height
male.mean = students.input %>%
filter(sex == "M") %>%
summarise(mean = mean(height))
female.mean = students.input %>%
filter(sex == "F") %>%
summarise(mean = mean(height))
overall.mean = mean(students.input$height)
# calculate the difference and store it the result data.frame
result.frame$difference <- apply(students.input, 1, function(stud) {
if(sex.specific = TRUE){
ifelse(stud["sex"] == "M",
male.mean - as.numeric(stud["height"]),
female.mean - as.numeric(stud["height"])
)
}else {
overall.mean - as.numeric(stud["height"])
}})
return(result.frame)
}
checkHeight(students.input = students,sex.specific = TRUE)
library(dplyr)
age = c(19, 22, 21, 23, 22, 20, 28, 25)
weight = c(50, 75, 80, 56, 75, 58, 65, 82)
height = c(1.66, 1.78, 1.90, 1.72, 1.83, 1.68, 1.70, 1.85)
sex = c("F", "M", "M", "F", "M", "F", "F", "M")
students = data.frame(cbind(age, weight, height, sex))
students = transform(students, age = as.numeric(as.character(age)))
students = transform(students, height = as.numeric(as.character(height)))
students = transform(students, weight = as.numeric(as.character(weight)))
students$name = c("Maria", "Franz", "Peter", "Lisa", "Hans", "Eva", "Mia", "Karl")
checkHeight3 = function(students.input = students){
# prepare result data.frame
result.frame = data.frame(matrix(NA, nrow = nrow(students.input), ncol = 2))
colnames(result.frame) = c("name", "difference")
result.frame$name <- students.input$name
# calculate sex means for height
male.mean = students.input %>%
filter(sex == "M") %>%
summarise(mean = mean(height))
female.mean = students.input %>%
filter(sex == "F") %>%
summarise(mean = mean(height))
# calculate the difference and store it the result data.frame
result.frame$difference <- apply(students.input, 1, function(stud) {
ifelse(stud["sex"] == "M",
male.mean - as.numeric(stud["height"]),
female.mean - as.numeric(stud["height"])
)})
return(result.frame)
}
checkHeight3(students.input = students)
checkHeight = function(students.input,sex.specific){
# prepare result data.frame
result.frame = data.frame(matrix(NA, nrow = nrow(students.input), ncol = 2))
colnames(result.frame) = c("name", "difference")
result.frame$name <- students.input$name
# calculate sex means for height
male.mean = students.input %>%
filter(sex == "M") %>%
summarise(mean = mean(height))
female.mean = students.input %>%
filter(sex == "F") %>%
summarise(mean = mean(height))
overall.mean = mean(students.input$height)
# calculate the difference and store it the result data.frame
result.frame$difference <- apply(students.input, 1, function(stud){
if (sex.specific){
ifelse(stud["sex"] == "M",
male.mean - as.numeric(stud["height"]),
female.mean - as.numeric(stud["height"])
)
} else {
overall.mean - as.numeric(stud["height"])
}
})
return(result.frame)
}
checkHeight3(students.input = students,sex.specific=TRUE)
checkHeight = function(students.input,sex.specific){
# prepare result data.frame
result.frame = data.frame(matrix(NA, nrow = nrow(students.input), ncol = 2))
colnames(result.frame) = c("name", "difference")
result.frame$name <- students.input$name
# calculate sex means for height
male.mean = students.input %>%
filter(sex == "M") %>%
summarise(mean = mean(height))
female.mean = students.input %>%
filter(sex == "F") %>%
summarise(mean = mean(height))
overall.mean = mean(students.input$height)
# calculate the difference and store it the result data.frame
result.frame$difference <- apply(students.input, 1, function(stud){
if (sex.specific){
ifelse(stud["sex"] == "M",
male.mean - as.numeric(stud["height"]),
female.mean - as.numeric(stud["height"])
)
} else {
overall.mean - as.numeric(stud["height"])
}
})
return(result.frame)
}
checkHeight(students.input = students,sex.specific=TRUE)
checkHeight = function(students.input,sex.specific){
# prepare result data.frame
result.frame = data.frame(matrix(NA, nrow = nrow(students.input), ncol = 2))
colnames(result.frame) = c("name", "difference")
result.frame$name <- students.input$name
# calculate sex means for height
male.mean = students.input %>%
filter(sex == "M") %>%
summarise(mean = mean(height))
female.mean = students.input %>%
filter(sex == "F") %>%
summarise(mean = mean(height))
overall.mean = mean(students.input$height)
# calculate the difference and store it the result data.frame
result.frame$difference <- apply(students.input, 1, function(stud){
if (sex.specific){
ifelse(stud["sex"] == "M",
male.mean - as.numeric(stud["height"]),
female.mean - as.numeric(stud["height"])
)
} else {
overall.mean - as.numeric(stud["height"])
}
})
return(result.frame)
}
checkHeight(students.input = students,sex.specific=FALSE)
library(pssi)
example()
example(top)
checkHeight(students.input = students,sex.specific=FALSE)
example(checkHeight)
library(pssi)
example(checkHeight)
library(pssi)
example(checkHeight)
help
?checkHeight
checkHeight(students.input = students,sex.specific=FALSE)
library(pssi)
library(pssi)
example(checkHeight)
?checkHeight
library(pssi)
?checkHeight
library(pssi)
library(pssi)
?checkHeight
library(pssi)
library(pssi)
library(dplyr)
age = c(19, 22, 21, 23, 22, 20, 28, 25)
weight = c(50, 75, 80, 56, 75, 58, 65, 82)
height = c(1.66, 1.78, 1.90, 1.72, 1.83, 1.68, 1.70, 1.85)
sex = c("F", "M", "M", "F", "M", "F", "F", "M")
students = data.frame(cbind(age, weight, height, sex))
students = transform(students, age = as.numeric(as.character(age)))
students = transform(students, height = as.numeric(as.character(height)))
students = transform(students, weight = as.numeric(as.character(weight)))
students$name = c("Maria", "Franz", "Peter", "Lisa", "Hans", "Eva", "Mia", "Karl")
students
save(students,file = "Data/pssi_data.rda")
data(pssi_data)
library(pssi)
data(pssi_data)
library(pssi)
load("~/hello-world/U2/pssi/Data/pssi_data.rda")
data(pssi_data)
Data(pssi_data)
library(pssi)
Data(pssi_data)
data(pssi_data)
data(Exercise1)
library(pssi)
data(pssi_data)
library(pssi)
data(pssi_data)
students
?pssi_data
library(pssi)
?pssi_data
library(pssi)
?pssi_data
help(packages = pssi_data)
help(package = pssi_data)
help(package = pssi_data)
help(package = pssi)
library(pssi)
library(pssi)
help(package = pssi)
library(oro.nifti)
install.packages("oro.nifti")
library(oro.nifti)
?readNIfTI
system.file(package = "pssi")
library(pssi)
library(pssi)
?pssi
?pssi_data
help(package = pssi)
write.csv(students,file = "data-raw/students.csv",row.names = FALSE)
stu <- read.csv(file = "data-raw/students.csv")
stu
devtools::use_data(stu)
devtools::use_data(stu,overwrite = TRUE)
library(pssi)
library(pssi)
library(pssi)
library(pssi)
library(pssi)
library(oro.nifti)
devtools:: document()
devtools:: check()
library(pssi)
devtools::document()
system.file("students", "students.csv", package = "pssi")
tools::resaveRdaFiles("students",students.csv)
devtools:: use_rcpp()
citation("pssi")
citation("pssi")
system.file("extdata", "stu.csv", package = "pssi")
library(pssi)
system.file("extdata", "stu.csv", package = "pssi")
system.file("extdata", "students.csv", package = "pssi")
library(pssi)
system.file("extdata", "students.csv", package = "pssi")
system.file("extdata", "students.csv", package = "pssi")
system.file("extdata", "students.csv", package = "pssi")
system.file()
citation()
citation("pssi")
citEntry()
evtools::release()
devtools::release()
0
?pssi
??pssi
?checkHeight
